pipeline {
	agent any
	tools {
		maven "maven"
	}
	
	parameters { 
         string(name: 'tomcat_qa', defaultValue: '18.191.168.82', description: 'QA Server')
         string(name: 'tomcat_prod', defaultValue: '18.220.138.54', description: 'Production Server')
    } 
    stages {
    
    stage('Clone sources') {
    steps {
        git url: 'https://github.com/rajkumarbalasubramanian/WebApp.git'
	}
   }
    stage('Maven Compile') {
    steps {
        sh 'mvn -DskipTests=True clean compile'
	}
   }
   stage("Static Code Analysis"){
   steps {
 	withSonarQubeEnv('sonarqube') {
        sh 'mvn sonar:sonar -Dsonar.sources=. -Dsonar.tests=. -Dsonar.test.inclusions=**/test/java/servlet/createpage_junit.java -Dsonar.exclusions=**/test/java/servlet/createpage_junit.java -Dsonar.login=admin -Dsonar.password=Zgjjr2bkkkdh'
	 } 
	 }
   }
   stage('Build Project') {
   steps {
	  sh 'mvn -DskipTests=True clean package' 
	  }
   }
   stage('Deploy to QA') {
   steps {
	   sshagent(['tomcat-qa']) {
	   sh "scp -o StrictHostKeyChecking=no target/*.war ubuntu@${params.tomcat_qa}:/opt/tomcat/webapps/"
	   }
	   }
   }
   stage('Functional test') {
   steps {
	  sh 'mvn -f functionaltest/pom.xml test' 
	  }
   }
   
    stage('Sanity test') {
   steps {
	  sh 'mvn -f Acceptancetest/pom.xml test' 
	  }
   }
   stage('Performance test') {
   steps {
         blazeMeterTest credentialsId: 'perf', testId: '7889218.taurus', workspaceId: '474121'
	}
    }
    
   }
}
    
